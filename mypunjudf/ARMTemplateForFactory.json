{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "mypunjudf"
		},
		"ls_mysablob_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'ls_mysablob'"
		},
		"ls_order_items_dl_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'ls_order_items_dl'"
		},
		"ls_s3_order_items_secretAccessKey": {
			"type": "secureString",
			"metadata": "Secure string for 'secretAccessKey' of 'ls_s3_order_items'"
		},
		"ls_sql_retaildb_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'ls_sql_retaildb'"
		},
		"ls_order_items_dl_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://mysadls.dfs.core.windows.net/"
		},
		"ls_s3_order_items_properties_typeProperties_accessKeyId": {
			"type": "string",
			"defaultValue": "AKIAYWBJYCPVPCYWPOJ7"
		},
		"ls_sql_retaildb_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "myserver98.database.windows.net"
		},
		"ls_sql_retaildb_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "RETAILDB"
		},
		"ls_sql_retaildb_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "arun"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pl_ingest_orders')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_mysablob",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_orders_sadl",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_mysablob')]",
				"[concat(variables('factoryId'), '/datasets/ds_orders_sadl')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_order_items')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_orders_items",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AmazonS3ReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_order_items_s3",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_order_items_dl",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2025-10-11T00:30:24Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_order_items_s3')]",
				"[concat(variables('factoryId'), '/datasets/ds_order_items_dl')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_process_orders_data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "orders_dataflow",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "orders_dataflow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"orderitemsstream": {},
									"orderstream": {},
									"highvaluesink": {},
									"lowvaluesink": {},
									"erroneoussink": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/orders_dataflow')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_errroneous_values')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_order_items_dl",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "erroneous_orders",
						"fileSystem": "finaloutput"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_order_items_dl')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_highvalue_orders')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_order_items_dl",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "high_value_orders",
						"fileSystem": "finaloutput"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_order_items_dl')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_lowvalue_orders')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_order_items_dl",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "low_value_orders",
						"fileSystem": "finaloutput"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_order_items_dl')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_mysablob')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_mysablob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "orders.csv",
						"container": "ordersip"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "order_id",
						"type": "String"
					},
					{
						"name": "order_date",
						"type": "String"
					},
					{
						"name": "order_customer_id",
						"type": "String"
					},
					{
						"name": "order_status",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_mysablob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_order_items_dl')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_order_items_dl",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "order_items",
						"fileSystem": "myfiles"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_order_items_dl')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_order_items_s3')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_s3_order_items",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AmazonS3Location",
						"bucketName": "awss3arun",
						"folderPath": "csv",
						"fileName": "order_items.csv"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "order_item_id",
						"type": "String"
					},
					{
						"name": "order_item_order_id",
						"type": "String"
					},
					{
						"name": "order_item_product_id",
						"type": "String"
					},
					{
						"name": "order_item_quantity",
						"type": "String"
					},
					{
						"name": "order_item_subtotal",
						"type": "String"
					},
					{
						"name": "order_item_price",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_s3_order_items')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_orders_sadl')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_order_items_dl",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "orders",
						"fileSystem": "myfiles"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "order_id",
						"type": "String"
					},
					{
						"name": "order_date",
						"type": "String"
					},
					{
						"name": "order_customer_id",
						"type": "String"
					},
					{
						"name": "order_status",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_order_items_dl')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_sql_retaildb')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sql_retaildb",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "order_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "order_date",
						"type": "varchar"
					},
					{
						"name": "order_customer_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "order_status",
						"type": "varchar"
					},
					{
						"name": "order_amount",
						"type": "float",
						"precision": 15
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "premium_orders"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_sql_retaildb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_mysablob')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('ls_mysablob_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_order_items_dl')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_order_items_dl_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('ls_order_items_dl_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_s3_order_items')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AmazonS3",
				"typeProperties": {
					"serviceUrl": "https://s3.amazonaws.com",
					"accessKeyId": "[parameters('ls_s3_order_items_properties_typeProperties_accessKeyId')]",
					"secretAccessKey": {
						"type": "SecureString",
						"value": "[parameters('ls_s3_order_items_secretAccessKey')]"
					},
					"authenticationType": "AccessKey"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_sql_retaildb')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('ls_sql_retaildb_properties_typeProperties_server')]",
					"database": "[parameters('ls_sql_retaildb_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('ls_sql_retaildb_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('ls_sql_retaildb_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/orders_dataflow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_order_items_dl",
								"type": "DatasetReference"
							},
							"name": "orderitemsstream"
						},
						{
							"dataset": {
								"referenceName": "ds_orders_sadl",
								"type": "DatasetReference"
							},
							"name": "orderstream"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_highvalue_orders",
								"type": "DatasetReference"
							},
							"name": "highvaluesink"
						},
						{
							"dataset": {
								"referenceName": "ds_lowvalue_orders",
								"type": "DatasetReference"
							},
							"name": "lowvaluesink"
						},
						{
							"dataset": {
								"referenceName": "ds_errroneous_values",
								"type": "DatasetReference"
							},
							"name": "erroneoussink"
						}
					],
					"transformations": [
						{
							"name": "aggregate1"
						},
						{
							"name": "join1"
						},
						{
							"name": "select1"
						},
						{
							"name": "split1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          order_item_id as string,",
						"          order_item_order_id as string,",
						"          order_item_product_id as string,",
						"          order_item_quantity as float,",
						"          order_item_subtotal as float,",
						"          order_item_price as float",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> orderitemsstream",
						"source(output(",
						"          order_id as string,",
						"          order_date as string,",
						"          order_customer_id as string,",
						"          order_status as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> orderstream",
						"orderitemsstream aggregate(groupBy(order_item_order_id),",
						"     order_item_subtotal = sum(order_item_subtotal)) ~> aggregate1",
						"aggregate1, orderstream join(order_item_order_id == order_id,",
						"     joinType:'outer',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join1",
						"join1 select(mapColumn(",
						"          order_id,",
						"          order_date,",
						"          customer_id = order_customer_id,",
						"          order_amount = order_item_subtotal,",
						"          order_status",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 split(order_amount>500,",
						"     order_amount<=500,",
						"     disjoint: false) ~> split1@(highvalue, lowvalue, erroneous)",
						"split1@highvalue sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> highvaluesink",
						"split1@lowvalue sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> lowvaluesink",
						"split1@erroneous sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> erroneoussink"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_order_items_dl')]",
				"[concat(variables('factoryId'), '/datasets/ds_orders_sadl')]",
				"[concat(variables('factoryId'), '/datasets/ds_highvalue_orders')]",
				"[concat(variables('factoryId'), '/datasets/ds_lowvalue_orders')]",
				"[concat(variables('factoryId'), '/datasets/ds_errroneous_values')]"
			]
		}
	]
}